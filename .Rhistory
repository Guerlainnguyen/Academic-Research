# Look at the data to see whether the data sets are tidy (i.e., one value in a
# cell) and does not need any adjustment in terms of needing to separate cells
# or columns
head(year1999)
head(year2000)
head(year2001)
head(year2002)
# Chunk 5: missing
# Checking for missing values
sum(is.na(year1999))
sum(is.na(year2000))
sum(is.na(year2001))
sum(is.na(year2002))
# Chunk 6: columns
# Check whether the columns are the same, otherwise adjustments will have to be
# made before they can be joined together
identical(colnames(year1999), colnames(year2000))
identical(colnames(year1999), colnames(year2001))
identical(colnames(year1999), colnames(year2002))
# Chunk 7: merge
# Merging / Joining all data sets into one data set to make the
# cleaning up process easier
data <- full_join(year1999, year2000)
data <- full_join(data, year2001)
data <- full_join(data, year2002)
# Chunk 8: rename
# Renaming variables to make them more understandable
data <- data %>%
rename(
siblings = m_ahim,
immigrant = ole5,
father_educ = educav,
mother_educ = educem,
bagrut_status = zakaibag,
school_religious = semrel,
school_arab = semarab
)
# Chunk 9: years
# Naming year entries according to their full year, which will make it easier
# to filter out years and make them more understandable
data <- data %>%
mutate(
year = replace(year, year == 99, 1999),
year = replace(year, year == 0, 2000),
year = replace(year, year == 1, 2001),
year = replace(year, year == 2, 2002)
)
# Chunk 10: variables
# Adding and removing variables for the replication process
data <- data %>%
mutate(
# at least 4 siblings dummy
siblings_4 = as.numeric(siblings >= 4),
# Categorizing pair and school_id as a factor
pair = as.factor(pair),
school_id = as.factor(school_id)
) %>%
# removing variables we will not be using in our research
select(
-student_id, -att18, -att20, -att22, -att24, -awr18, -awr20, -awr22, -awr24,
-achv_math, -achv_eng, -achv_hib
)
# Chunk 11: siblings
# Creating a siblings variable into a categorical variable
data$sib_category <- as.factor(
ifelse(data$siblings == 1, "1",
ifelse(data$siblings == 2, "2",
ifelse(data$siblings == 3, "3",
ifelse(data$siblings == 4, "4", "4+"
)
)
)
)
)
# Chunk 12: save
# Saving the final data, in case we will use another Rmd file or for any other
# purpose
saveRDS(data, file = "data/full_data.Rdata")
# splitting up the datasets again per year and saving them to  use in other Rmd
# files
data_1999 <- data %>%
filter(year == 1999)
data_2000 <- data %>%
filter(year == 2000)
data_2001 <- data %>%
filter(year == 2001)
data_2002 <- data %>%
filter(year == 2002)
# Chunk 13: quartiles
# create quantile dummies for 1999
data_1999 <- data_1999 %>%
mutate(
# quartiles
ls_100 = as.numeric(lagscore >= quantile(lagscore, 0.75)),
ls_75 = as.numeric(
lagscore >= quantile(lagscore, 0.50) &
lagscore < quantile(lagscore, 0.75)
),
ls_50 = as.numeric(
lagscore >= quantile(lagscore, 0.25) &
lagscore < quantile(lagscore, 0.50)
),
ls_25 =  as.numeric(lagscore < quantile(lagscore, 0.25)),
# top and bottom marginal groups
top_ls = ifelse(ls_75 == 1 | ls_100 == 1, 1, 0),
bot_ls = ifelse(ls_25 == 1 | ls_50 == 1, 1, 0),
# lagged score
ls = lagscore
)
# create quantile dummies for 2000
data_2000 <- data_2000 %>%
mutate(
# quartiles
ls_100 = as.numeric(lagscore >= quantile(lagscore, 0.75)),
ls_75 = as.numeric(
lagscore >= quantile(lagscore, 0.50) &
lagscore < quantile(lagscore, 0.75)
),
ls_50 = as.numeric(
lagscore >= quantile(lagscore, 0.25) &
lagscore < quantile(lagscore, 0.50)
),
ls_25 =  as.numeric(lagscore < quantile(lagscore, 0.25)),
# top and bottom marginal groups
top_ls = ifelse(ls_75 == 1 | ls_100 == 1, 1, 0),
bot_ls = ifelse(ls_25 == 1 | ls_50 == 1, 1, 0),
# lagged score
ls = lagscore
)
# create quantile, marginal top and bottom dummies for 2001
data_2001 <- data_2001 %>%
mutate(
# quartiles
ls_100 = as.numeric(lagscore >= quantile(lagscore, 0.75)),
ls_75 = as.numeric(
lagscore >= quantile(lagscore, 0.50) &
lagscore < quantile(lagscore, 0.75)
),
ls_50 = as.numeric(
lagscore >= quantile(lagscore, 0.25) &
lagscore < quantile(lagscore, 0.50)
),
ls_25 =  as.numeric(lagscore < quantile(lagscore, 0.25)),
# top and bottom marginal groups
top_ls = ifelse(ls_75 == 1 | ls_100 == 1, 1, 0),
bot_ls = ifelse(ls_25 == 1 | ls_50 == 1, 1, 0),
# lagged score
ls = lagscore
)
# create quantile, marginal top and bottom dummies for 2002
data_2002 <- data_2002 %>%
mutate(
# quartiles
ls_100 = as.numeric(lagscore >= quantile(lagscore, 0.75)),
ls_75 = as.numeric(
lagscore >= quantile(lagscore, 0.50) &
lagscore < quantile(lagscore, 0.75)
),
ls_50 = as.numeric(
lagscore >= quantile(lagscore, 0.25) &
lagscore < quantile(lagscore, 0.50)
),
ls_25 =  as.numeric(lagscore < quantile(lagscore, 0.25)),
# top and bottom marginal groups
top_ls = ifelse(ls_75 == 1 | ls_100 == 1, 1, 0),
bot_ls = ifelse(ls_25 == 1 | ls_50 == 1, 1, 0),
# lagged score
ls = lagscore
)
# Chunk 14
# saving the data sets
saveRDS(data_1999, file = "data/data_1999.Rda")
saveRDS(data_2000, file = "data/data_2000.Rda")
saveRDS(data_2001, file = "data/data_2001.Rda")
saveRDS(data_2002, file = "data/data_2002.Rda")
# Chunk 15: class
# Check what the class of each variable is
lapply(data, class)
# Chunk 16: dummies
# Check whether those we suspect to be dummies are actually dummies
summary(data)
# Chunk 17: Variable Description Table
# input for the variable description table
text_tbl <- data.frame(
Variables = c(
"treated", "pair", "siblings", "boy", "immigrant", "father_educ",
"mother_educ", "bagrut_status", "lagscore", "school_religious",
"school_arab", "year", "ls_#", "siblings_4", "sib_group"
),
Description = c(
"Treatment indicator, i.e., treated (1) and treatment (0)",
"Treatment pair. Each treated school is paired to an untreated school that
are most similar in characteristics.",
"Number of siblings",
"Gender indicator, i.e., boy (1) and girl (0)",
"Immigrant indicator, i.e., immigrant (1) and non-immigrant (0)",
"Father’s years of schooling",
"Mother’s years of schooling",
"Bagrut status, i.e., Bagrut (1) and no Bagrut (0)",
"Lagged Bagrut score, based on Bagrut rates from 1999",
"Indicator of Jewish religious school, i.e., Jewish religious (1) and
non-Jewish religious (0)",
"Indicator of Arab school, i.e., Arab (1) and non-Arab (0)",
"Year indicator",
"Indicators of quantiles (25, 50, 75, 100), i.e., quantile (1) and not in
the quantile (0)",
"Indicator whether the individual has 4 or more siblings, i.e. 4(+) siblings
(1) and less than 4 siblings (0)",
"Categorical variable for the amount of siblings, ranging from 1-4+"
)
)
# Creating the table
kbl(text_tbl, caption = "<b>Table 1: Variable Descripton</b>") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman") %>%
kable_styling(bootstrap_options = c("bordered", "basic")) %>%
row_spec(0, bold = TRUE) %>%
column_spec(1, bold = FALSE, border_right = TRUE, background = "lightgrey") %>%
column_spec(2, width = "16cm") %>%
footnote(
general = c(
"The table describes the variables in general, they are not year specific"
),
footnote_as_chunk = T
)
# Chunk 18
# All variables in the Experimental sample
summary(data)
# Chunk 19
# All variables in the treated year 2001 sample
summary(data_2001)
# Subset samples
# Subset for boys
summary(subset(data_2001, boy == 1))
# Subset for girls
summary(subset(data_2001, boy == 0))
# Chunk 20
# Comparing statistics of key variables in full sample and 2001 sample
list("siblings" = summary(data$siblings),
"siblings_2001" = summary(data_2001$siblings),
"father_educ" = summary(data$father_educ),
"father_educ_2001" = summary(data_2001$father_educ),
"mother_educ_2001" = summary(data_2001$mother_educ),
"mother_educ" = summary(data$mother_educ))
# Chunk 21
# All variables in the control year 2000 sample
summary(data_2000)
# Subset samples
# Subset for boys
summary(subset(data_2000, boy == 1))
# Subset for girls
summary(subset(data_2000, boy == 0))
# Chunk 22
# Comparing statistics of key variables in full sample and 2000 sample
list("siblings" = summary(data$siblings),
"siblings_2000" = summary(data_2000$siblings),
"father_educ" = summary(data$father_educ),
"father_educ_2000" = summary(data_2000$father_educ),
"mother_educ_2000" = summary(data_2000$mother_educ),
"mother_educ" = summary(data$mother_educ))
# Chunk 23
# Sample sizes
# Sizes of Treated vs Control groups in
#Full data set
data %>% group_by(treated) %>% count()
# 2001 sample
# Relatively equally distributed: control = 1876, treated = 1945
data_2001 %>% group_by(treated) %>% count()
# 2000 sample
data_2000 %>% group_by(treated) %>% count()
# Chunk 24
# Visualization
ggdensity(data,
x = "year",
fill = "treated",
palette = "jco")
p <- ggplot(data, aes(x = year,
y = ..count..,
fill = as.factor(treated))) +
geom_bar() +
labs(y = "") +
guides(fill=guide_legend(title="")) +
scale_fill_discrete(labels = c("Control","Treatment")) +
theme_classic()
annotate_figure(p,
top = text_grob("Sizes of treated vs control groups across years ",
color = "red", face = "bold", size = 12))
# Chunk 25
# Gender distribution over year
data %>% group_by(boy) %>% count()
data_2001 %>% group_by(boy) %>% count()
data_2000 %>% group_by(boy) %>% count()
# Chunk 26
# Visualization
ggdensity(data,
x = "year",
fill = "boy",
palette = "jco")
p <- ggplot(data, aes(x = year,
y = ..count..,
fill = as.factor(boy))) +
geom_bar() +
labs(y = "") +
guides(fill=guide_legend(title="")) +
scale_fill_discrete(labels = c("Girls","Boys")) +
theme_classic()
annotate_figure(p,
top = text_grob("Number of boys and girls over year",
color = "red", face = "bold", size = 12))
# Chunk 27
# dataframe to contain the means and standard errors
desc_table_01 <- data.frame(NULL)
desc_var <- c("bagrut_status", "school_arab", "school_religious",
"father_educ", "mother_educ", "siblings", "immigrant",
"lagscore", "siblings_4", "")
# for-loop to assign values into dataframe
## All observations
for(i in 1:10){
# means of individual covariates
mean <- mean(data_2001[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(data_2001[[desc_var[i]]])
# number of observations
obs <- nrow(data_2001)
# assigning values to the table
desc_table_01[i, 1] <- mean
desc_table_01[i, 2] <- sd
desc_table_01[10, 1] <- obs
}
## Sample for boys
for (i in 1:10){
# mean of the column
mean <- mean(subset(data_2001, boy == 1)[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(subset(data_2001, boy == 1)[[desc_var[i]]])
# number of observations
obs <- nrow(subset(data_2001, boy == 1))
# assigning values to the table
desc_table_01[i, 3] <- mean
desc_table_01[i, 4] <- sd
desc_table_01[10, 2] <- obs
}
## Sample for girls
for (i in 1:10){
# mean of the column
mean <- mean(subset(data_2001, boy == 1)[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(subset(data_2001, boy == 1)[[desc_var[i]]])
# number of observations
obs <- nrow(subset(data_2001, boy == 0))
# assigning values to the table
desc_table_01[i, 5] <- mean
desc_table_01[i, 6] <- sd
desc_table_01[10, 3] <- obs
}
# Formatting
## Renaming columns
colnames(desc_table_01) <- c(
"All", "Boy sample", "Girl sample")
## Renaming rows
rownames(desc_table_01) <- c("Bagrut rate", "Arab school", "Religious school",  "Father's education", "Mother's_education", "Number of siblings", "Immigrant",  "Lagged score", "Siblings category", "Number of observations")
## Round values
desc_table_01 <- round(desc_table_01, 3)
# Print the results
desc_table_01
# Chunk 28
# dataframe to contain the means and standard errors
desc_table_00 <- data.frame(NULL)
desc_var <- c("bagrut_status", "school_arab", "school_religious",
"father_educ", "mother_educ", "siblings", "immigrant",
"lagscore", "siblings_4", "")
# for-loop to assign values into dataframe
## All observations
for(i in 1:10){
# means of individual covariates
mean <- mean(data_2000[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(data_2000[[desc_var[i]]])
# number of observations
obs <- nrow(data_2000)
# assigning values to the table
desc_table_00[i, 1] <- mean
desc_table_00[i, 2] <- sd
desc_table_00[10, 1] <- obs
}
## Sample boys
for (i in 1:10){
# mean of the column
mean <- mean(subset(data_2000, boy == 1)[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(subset(data_2000, boy == 1)[[desc_var[i]]])
# number of observations
obs <- nrow(subset(data_2000, boy == 1))
# assigning values to the table
desc_table_00[i, 3] <- mean
desc_table_00[i, 4] <- sd
desc_table_00[10, 2] <- obs
}
## Sample for girls
for (i in 1:10){
# mean of the column
mean <- mean(subset(data_2000, boy == 1)[[desc_var[i]]])
# standard errors of individual covariates
sd <- sd(subset(data_2000, boy == 1)[[desc_var[i]]])
# number of observations
obs <- nrow(subset(data_2000, boy == 0))
# assigning values to the table
desc_table_00[i, 5] <- mean
desc_table_00[i, 6] <- sd
desc_table_00[10, 3] <- obs
}
# Formatting
## Rename columns
colnames(desc_table_00) <- c(
"All", "Boy sample", "Girl sample")
## Rename rows
rownames(desc_table_00) <- c(
"Bagrut rate", "Arab school", "Religious school",  "Father's education",
"Mother's_education", "Number of siblings", "Immigrant",  "Lagged score",
"Siblings category", "Number of observations"
)
## Round values
desc_table_00 <- round(desc_table_00, 3)
# Print results
desc_table_00
# Panel A. 2001
## print standard errors beside means
for (i in 1:9){
desc_table_01[i, 1] <- paste(
desc_table_01[i, 1], "<br>(", desc_table_01[i, 4], ")", sep = ""
)
desc_table_01[i, 2] <- paste(
desc_table_01[i, 2], "<br>(", desc_table_01[i, 5], ")", sep = ""
)
desc_table_01[i, 3] <- paste(
desc_table_01[i, 3], "<br>(", desc_table_01[i, 6], ")", sep = ""
)
}
desc_table_01[, 1] <- linebreak(desc_table_01[, 1])
desc_table_01[, 2] <- linebreak(desc_table_01[, 2])
desc_table_01[, 3] <- linebreak(desc_table_01[, 3])
## remove columns of the standard errors
desc_table_01 <- desc_table_01[-c(4,5,6)]
desc_table_01
# Panel B.2000
## print standard errors beside means
for (i in 1:9){
desc_table_00[i, 1] <- paste(
desc_table_00[i, 1], "<br>(", desc_table_00[i, 4], ")", sep = ""
)
desc_table_00[i, 2] <- paste(
desc_table_00[i, 2], "<br>(", desc_table_00[i, 5], ")", sep = ""
)
desc_table_00[i, 3] <- paste(
desc_table_00[i, 3], "<br>(", desc_table_00[i, 6], ")", sep = ""
)
}
desc_table_00[, 1] <- linebreak(desc_table_00[, 1])
desc_table_00[, 2] <- linebreak(desc_table_00[, 2])
desc_table_00[, 3] <- linebreak(desc_table_00[, 3])
## remove columns of the standard errors
desc_table_00 <- desc_table_00[-c(4,5,6)]
desc_table_00
# Merging Panel A + Panel B
desc_table <- rbind(desc_table_01, desc_table_00)
# Formating & Saving
## Renaming rows
rownames(desc_table) <- c("Bagrut rate", "Arab school", "Religious school",
"Father's education", "Mother's education",
"Number of siblings", "Immigrant",  "Lagged score",
"Siblings category", "Number of observations",
"Bagrut rate ", "Arab school ", "Religious school ",
"Father's education ", "Mother's education ",
"Number of siblings ", "Immigrant ",
"Lagged score ", "Siblings category ",
"Number of observations ")
## Adding headlines
desc_table <- desc_table %>%
kable(
format = "html",
size = 14,
escape = FALSE,
caption = "<b>Table 2: Descriptive Statistics</b>",
align = "c") %>%
kable_classic(
full_width = F,
html_font = "Times New Roman",
position = "left"
) %>%
# For Panel A
pack_rows(
"Panel A. 2001", 1, 2, italic = TRUE, bold = FALSE, underline = TRUE
) %>%
pack_rows("School covariates", 2, 3, bold = TRUE) %>%
pack_rows("Micro covariates", 4, 10, bold = TRUE) %>%
# For Panel B
pack_rows(
"Panel B. 2000", 11, 12, italic = TRUE, bold = FALSE, underline = TRUE,
hline_before = TRUE, hline_after = TRUE
) %>%
pack_rows("School covariates", 12, 13, bold = TRUE) %>%
pack_rows("Micro covariates", 14, 19, bold = TRUE) %>%
# Adding footnotes for table
footnote(general = c(
"Table columns report sample means and standard deviations (shown in parentheses).",
"This is a replication of Table B1 (Angrist & Lavy, 2009, p. 1391)"
),
footnote_as_chunk = T
) %>%
# Saving results
save_kable(file = "Descriptive Statistics.png", zoom = 1.5)
# Showing Descritive Table
desc_table
